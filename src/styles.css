/* =========================
   Theme
   ========================= */
:root {
  --bg: #0b1020;
  --panel: #0e1629;
  --muted: #0b1324;
  --border: #1f2937;
  --text: #e5e7eb;
  --sub: #9ca3af;
  --accent: #60a5fa;
  --danger: #ef4444;
  --ok: #10b981;
  --shadow: 0 8px 24px rgba(0,0,0,0.35);
}

* { box-sizing: border-box; }
html, body, #root { height: 100%; }
body {
  margin: 0;
  background: radial-gradient(1200px 1200px at 10% -20%, rgba(96,165,250,0.08), transparent 60%) ,
              radial-gradient(1000px 1000px at 110% 120%, rgba(16,185,129,0.06), transparent 60%) ,
              var(--bg);
  color: var(--text);
  font: 14px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
}

/* =========================
   Layout
   ========================= */
.container {
  max-width: 980px;
  margin: 0 auto;
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  min-height: 100%;
}

.header {
  display: flex;
  align-items: center;
  gap: 10px;
  background: linear-gradient(0deg, rgba(255,255,255,0.02), rgba(255,255,255,0.02)), var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 10px 12px;
  box-shadow: var(--shadow);
}

.chat {
  flex: 1;
  overflow-y: auto;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 14px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  box-shadow: var(--shadow);
}

.msg {
  background: var(--muted);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 10px 12px;
  animation: fade-in 120ms ease-out;
}
.msg.appear { animation: fade-in-up 220ms ease-out; }
@keyframes fade-in { from { opacity: 0.6 } to { opacity: 1 } }
@keyframes fade-in-up { from { opacity: 0; transform: translateY(4px) } to { opacity: 1; transform: translateY(0) } }

.row {
  display: flex;
  align-items: center;
  gap: 8px;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 8px;
  box-shadow: var(--shadow);
}

.input-wrap {
  position: relative;
  flex: 1;
}
.input-wrap input {
  width: 100%;
  padding: 10px 40px 10px 10px;
  background: var(--muted);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 10px;
  outline: none;
}
.input-wrap .send-btn {
  position: absolute;
  right: 2px;
  top: 3px;
  transform: translateY(-1%);
}

/* =========================
   Buttons, badges
   ========================= */
.icon-btn {
  width: 32px;
  height: 32px;
  border-radius: 10px;
  background: var(--muted);
  border: 1px solid var(--border);
  color: var(--text);
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: transform 120ms ease, background 120ms ease, border-color 120ms ease, opacity 120ms ease;
}

/* If the button does NOT contain an <svg>, treat it as a text button */
.icon-btn:not(:has(svg)) {
  width: auto;              /* grow with content */
  height: 32px;             /* keep consistent height */
  padding: 0 12px;          /* breathing room for text */
  display: inline-flex;     /* better text alignment */
  align-items: center;
  justify-content: center;
  gap: 8px;
  white-space: nowrap;      /* keep “Cancel”/“Save” on one line */
}

.icon-btn:hover { transform: translateY(-1px); border-color: #2b3a4f; }
.icon-btn.primary { background: #13213b; border-color: #20304a; }
.icon-btn.ok { background: rgba(16,185,129,0.1); border-color: rgba(16,185,129,0.25); }
.icon-btn.danger { background: rgba(239,68,68,0.08); border-color: rgba(239,68,68,0.25); }
.icon-btn.ghost { background: rgba(255,255,255,0.04); }
.icon-btn:disabled { opacity: 0.6; cursor: default; transform: none; }
.icon-btn:focus-visible { outline: 2px solid #60a5fa; outline-offset: 2px; }


.badge {
  background: rgba(255,255,255,0.06);
  border: 1px solid var(--border);
  color: var(--text);
  padding: 4px 8px;
  border-radius: 999px;
  font-size: 12px;
}

/* =========================
   Code card
   ========================= */
.code-card {
  position: relative;
  border: 1px solid var(--border);
  background: #0a1322;
  border-radius: 12px;
  overflow: hidden;
}
.code-card pre {
  margin: 0;
  padding: 12px;
  overflow: auto;
  background: transparent;
}
.code-card code.hljs {
  display: block;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 12.5px;
  line-height: 1.45;
}

.lang-chip {
  position: absolute;
  top: 8px;
  left: 8px;
  font-size: 11px;
  color: var(--sub);
  background: rgba(255,255,255,0.04);
  border: 1px solid var(--border);
  padding: 2px 8px;
  border-radius: 999px;
  pointer-events: none;
}

.floating-actions {
  position: absolute;
  top: 8px;
  right: 8px;
  display: flex;
  gap: 6px;
  opacity: 0;
  transform: translateY(-4px);
  transition: opacity 120ms ease, transform 120ms ease;
}
.code-card:hover .floating-actions {
  opacity: 1;
  transform: translateY(0);
}

/* =========================
   Modal
   ========================= */
.modal-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(6, 9, 16, 0.55);
  backdrop-filter: blur(2px);
  display: grid;
  place-items: center;
  z-index: 999;
}
.modal {
  width: min(720px, calc(100% - 24px));
  max-height: calc(100vh - 24px);
  overflow: hidden;
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  box-shadow: var(--shadow);
}
.modal > header {
  padding: 12px 14px;
  border-bottom: 1px solid var(--border);
  font-weight: 700;
}
.modal .body {
  padding: 12px 14px;
}
.modal .body pre {
  background: var(--muted);
  border: 1px solid var(--border);
  border-radius: 10px;
  padding: 10px;
  overflow: auto;
}
.modal .row-btns {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
  padding: 12px 14px;
  border-top: 1px solid var(--border);
}

/* Scrollable body variant (Summary) */
.modal .body.scrollable {
  max-height: 60vh;
  overflow-y: auto;
}

/* =========================
   Screen overlay (Summarize)
   ========================= */
.container.busy { filter: grayscale(0.3) opacity(0.7); }

.screen-overlay {
  position: fixed;
  inset: 0;
  background: rgba(5, 8, 16, 0.6);
  backdrop-filter: blur(2px);
  z-index: 9999;
  display: grid;
  place-items: center;
  gap: 12px;
}
.screen-overlay .overlay-text {
  color: var(--text);
  font-weight: 600;
  letter-spacing: 0.2px;
}
.loader {
  width: 32px;
  height: 32px;
  border: 3px solid rgba(255,255,255,0.2);
  border-top-color: var(--accent);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}
@keyframes spin { to { transform: rotate(360deg); } }

/* =========================
   Scrollbars (themed)
   ========================= */
.chat,
.modal .body,
.modal .body.scrollable,
.code-card pre {
  scrollbar-width: thin;
  scrollbar-color: #1f2937 transparent; /* Firefox */
}

/* WebKit */
.chat::-webkit-scrollbar,
.modal .body::-webkit-scrollbar,
.modal .body.scrollable::-webkit-scrollbar,
.code-card pre::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
.chat::-webkit-scrollbar-track,
.modal .body::-webkit-scrollbar-track,
.modal .body.scrollable::-webkit-scrollbar-track,
.code-card pre::-webkit-scrollbar-track {
  background: transparent;
}
.chat::-webkit-scrollbar-thumb,
.modal .body::-webkit-scrollbar-thumb,
.modal .body.scrollable::-webkit-scrollbar-thumb,
.code-card pre::-webkit-scrollbar-thumb {
  background: #1f2937;
  border-radius: 10px;
  border: 2px solid transparent;
  background-clip: padding-box;
}
.chat::-webkit-scrollbar-thumb:hover,
.modal .body::-webkit-scrollbar-thumb:hover,
.modal .body.scrollable::-webkit-scrollbar-thumb:hover,
.code-card pre::-webkit-scrollbar-thumb:hover {
  background: #2b3a4f;
}

/* Selection */
::selection { background: rgba(96,165,250,0.35); color: #fff; }

/* =========================================================
   PATCH: Background should be static (non-repeating)
   ========================================================= */
/* Your body already defines a layered gradient. These additions
   keep it fixed to the viewport and avoid any tiling/repeat effect. */
body {
  background-attachment: fixed;  /* ADDED: keep gradient stationary */
  background-repeat: no-repeat;  /* ADDED */
  background-size: cover;        /* ADDED */
}

/* Ensure the main column can anchor a sticky footer row */
.container {
  /* Your CSS already has min-height: 100%; we add 100vh so the
     sticky input row has a viewport-sized scrolling context. */
  min-height: 100vh; /* ADDED */
}

/* =========================================================
   PATCH: Chat pane scrolling behavior & themed scrollbars
   ========================================================= */
/* Chat was already themed; these enhance interaction and layout stability */
.chat {
  overscroll-behavior: contain;     /* ADDED: prevent overscroll bounce from reaching body */
  scrollbar-gutter: stable both-edges; /* ADDED: reserves space so layout doesn't shift */
}

/* (Your themed scrollbar rules are already present and kept as-is.) */

/* =========================================================
   PATCH: Sticky input row & single-line layout
   ========================================================= */
/* Make the input row stick to the bottom, on one line, above the content */
.row {
  position: sticky;   /* ADDED: stick to bottom */
  bottom: 0;          /* ADDED */
  z-index: 5;         /* ADDED: stay above chat content */
  flex-wrap: nowrap;  /* ADDED: prevent wrapping when Send ↔ Stop toggles */
  /* We keep your existing background, border, padding, shadow, etc. */
}

/* =========================================================
   PATCH: Input wrap → grid (button stays put, no reflow)
   ========================================================= */
/* Your App.tsx now renders the input region as a 2-column grid.
   These rules align with that and *override* the old absolute button rule. */
.input-wrap {
  display: grid;                       /* ADDED */
  grid-template-columns: 1fr 36px;     /* ADDED: input | fixed button slot */
  align-items: center;                 /* ADDED */
  gap: 8px;                            /* ADDED */
}

/* The earlier input had extra right padding to make room for the
   absolutely-positioned send button. With the grid layout, we let
   the input use normal padding so text doesn't collide with the button. */
.input-wrap input {
  padding: 10px;       /* ADDED: overrides earlier 10px 40px 10px 10px */
  min-width: 0;        /* ADDED: allow input to shrink instead of pushing button down */
}

/* IMPORTANT: Override the earlier absolute positioning for .send-btn.
   We DO NOT remove the old rule; this override (defined later in the file)
   takes precedence and keeps the button in the grid’s second column. */
.input-wrap .send-btn {
  position: static;    /* ADDED: override earlier absolute positioning */
  right: auto;         /* ADDED */
  top: auto;           /* ADDED */
  transform: none;     /* ADDED: no vertical nudge in grid */
  width: 32px;         /* ADDED: match your .icon-btn size */
  height: 32px;        /* ADDED */
}

/* If you’re also showing a red Stop button during a request, it
   inherits .icon-btn styles; keep the same footprint to avoid reflow. */
.icon-btn.danger {
  width: 32px;   /* ADDED: ensure same width as Send */
  height: 32px;  /* ADDED */
}

/* Optional: slight polish so the sticky row blends with the panel background
   when it overlays content during scroll (keeps your existing colors). */
/*
.row {
  background: color-mix(in oklab, var(--panel) 92%, transparent);
  backdrop-filter: blur(3px);
  border-top: 1px solid var(--border);
}
*/


