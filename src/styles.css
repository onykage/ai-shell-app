/* ============================================================
   Kage 2.0 — condensed theme + layout (full replacement)
   ============================================================ */

/* ---------- Theme tokens ---------- */
:root {
  --bg: #060913;
  --panel: #0b1020;
  --muted: #0f1526;
  --border: #1f2a44;
  --text: #e5e7eb;
  --sub: #9aa3b2;
  --accent: #10a37f;
  --danger: #ef4444;
  --panel-gutter: #172042;
}

/* ---------- Base ---------- */
* { box-sizing: border-box; }
html, body, #root { height: 100%; }
html, body { margin: 0; padding: 0; background: var(--bg); color: var(--text); }
body {
  background-image: radial-gradient(1200px 800px at 50% -10%, #0b1020 0%, #060913 60%, #04070f 100%);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  overflow: hidden; /* disable page scroll; panes own scroll */
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
}

/* ---------- App container ---------- */
.container {
  width: 100vw; max-width: 100vw;
  height: 100vh; min-height: 100vh;
  padding: 0px;
  overflow: hidden;
}

/* ---------- Two-pane split: exact 50/50 with overlay divider ---------- */
.main-split {
  position: relative;
  display: grid;
  grid-template-columns: 1fr 1fr; /* true 50/50 */
  gap: 0;
  height: calc(100vh - 0px); /* container 20px top+bottom */
  min-height: 0;
}
.split-divider {
  position: absolute; left: 50%; top: 0;
  transform: translateX(-0.5px);
  width: 1px; height: 100%;
  background: var(--border);
  pointer-events: none; z-index: 2;
}

/* ---------- Left: AI pane ---------- */
.ai-pane {
  display: grid; flex-direction: column;
  min-width: 0; overflow: hidden;
  background: transparent;
}
/* Header no longer needs sticky; keep its visual style */
.ai-pane > .header {
  position: relative;          /* remove sticky, keep look/feel */
  z-index: 1;
  display: flex;
  align-items: center;
  gap: 10px;
  flex-wrap: nowrap;
  padding: 8px 10px;
  border-bottom: 1px solid var(--border);
  background: rgba(5,8,16,0.8);
  backdrop-filter: blur(3px);
}

/* Middle row is the ONLY scroller */
.ai-pane > .ai-scroll {
  min-height: 0;
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-gutter: stable both-edges;
  display: block;              /* no need for flex here anymore */
}

/* Chat fills the scroller; square corners; safe bottom padding */
.ai-pane .chat {
  border-radius: 0;
  padding: 8px 0 56px;         /* so content never hides behind input bar */
}

/* Bottom row = input bar pinned by grid (no sticky needed) */
.ai-pane > .row {
  position: relative;          /* remove sticky */
  z-index: 1;
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: nowrap;
  padding: 8px 10px;
  width: 100%;
  margin: 0;
  border-radius: 0;
  background: rgba(5,8,16,0.8);
  border-top: 1px solid var(--border);
  backdrop-filter: blur(3px);
}
/* This is the ONLY scroller in the left pane. It MUST be flex so the chat
   always grows to fill between sticky header (top) and sticky input (bottom). */
.ai-scroll {
  position: relative;
  display: flex; flex-direction: column; /* <— important */
  height: 100%; min-height: 0;
  overflow-y: auto;
  overscroll-behavior: contain;
  scrollbar-gutter: stable both-edges;
}

/* Sticky header (AI) */
.header {
  position: sticky; top: 0; z-index: 6;
  display: flex; align-items: center; gap: 10px; flex-wrap: nowrap;
  padding: 8px 10px;
  border-bottom: 1px solid var(--border);
  background: rgba(5,8,16,0.8);
  backdrop-filter: blur(3px);
}

/* Chat fills remaining space between header & input, even when empty */
.chat {
  flex: 1 1 auto; min-height: 0;
  overflow: visible;            /* scroller is .ai-scroll, not this */
  border-radius: 0;             /* square to match editor pane */
  padding: 8px 0 56px;          /* prevent overlap under sticky input */
}

/* Sticky bottom input row (left pane) */
.row {
  position: sticky; bottom: 0; z-index: 5;
  display: flex; align-items: center; gap: 8px; flex-wrap: nowrap;
  padding: 8px 10px; width: 100%; margin: 0; border-radius: 0;
  background: rgba(5,8,16,0.8);
  border-top: 1px solid var(--border);
  backdrop-filter: blur(3px);
}

/* Input wrap: fixed button slot so Send↔Stop swaps in place */
.input-wrap {
  display: grid; grid-template-columns: 1fr 36px; gap: 8px; align-items: center;
  min-width: 0; width: 100%;
}
.input-wrap input {
  width: 100%; min-width: 0; padding: 10px;
  background: var(--muted); color: var(--text);
  border: 1px solid var(--border); border-radius: 10px; outline: none;
}

/* ---------- Buttons / badges ---------- */
.icon-btn {
  display: inline-flex; align-items: center; justify-content: center;
  min-width: 32px; height: 32px; padding: 0 10px;
  border-radius: 10px;
  background: var(--muted);
  border: 1px solid var(--border);
  color: var(--text); cursor: pointer;
  transition: transform 120ms ease, background 120ms ease, border-color 120ms ease, opacity 120ms ease;
}
.icon-btn.primary { background: #0f1a32; border-color: var(--border); }
.icon-btn.ok      { background: #0f1a32; border-color: var(--border); }
.icon-btn.danger  { background: #2c0b0e; border-color: #7f1d1d; color: #fecaca; }
.icon-btn.ghost   { background: transparent; border-color: #26324e; }
.icon-btn:hover   { transform: translateY(-1px); }
.icon-btn:active  { transform: translateY(0); }
.icon-btn svg     { display: block; }

.badge {
  display: inline-flex; align-items: center;
  padding: 4px 8px; border-radius: 8px;
  border: 1px solid var(--border);
  font-size: 12px; line-height: 1; user-select: none;
}

/* ---------- Right: Editor pane ---------- */
.editor-pane {
  display: flex; flex-direction: column;
  min-width: 0; overflow: hidden; background: var(--panel);
}
.editor-header {
  display: flex; align-items: center; gap: 8px;
  padding: 8px 10px; border-bottom: 1px solid var(--border);
  position: sticky; top: 0; z-index: 3;
  background: rgba(5,8,16,0.8); backdrop-filter: blur(3px);
}
.editor-tabs button {
  font-size: 12px; padding: 6px 10px;
  border-radius: 8px; border: 1px solid var(--border);
  background: var(--muted); color: var(--text); cursor: pointer;
}
.editor-tabs button.active { background: var(--accent); color: #fff; border-color: var(--accent); }

.editor-body  { flex: 1 1 auto; min-height: 0; display: flex; flex-direction: column; overflow: hidden; }
.editor-view  { flex: 1 1 auto; min-height: 0; position: relative; }
.editor-webview { width: 100%; height: 100%; border: 0; background: #0b0f19; }

/* Companion console */
.editor-console {
  height: 160px; overflow: auto; border-top: 1px solid var(--border);
  background: #0b0f19; font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  font-size: 12px; line-height: 1.4; padding: 8px 10px;
}
.editor-console .log   { white-space: pre-wrap; }
.editor-console .warn  { color: #eab308; }
.editor-console .error { color: #ef4444; }

/* ---------- Modals ---------- */
.modal-backdrop {
  position: fixed; inset: 0; z-index: 50;
  display: flex; align-items: center; justify-content: center;
  background: rgba(2,6,12,0.65);
}
.modal {
  width: min(720px, 92vw); max-height: 80vh;
  display: flex; flex-direction: column;
  background: var(--panel); border: 1px solid var(--border);
  border-radius: 12px; overflow: hidden;
}
.modal > header { font-weight: 600; padding: 12px 14px; border-bottom: 1px solid var(--border); }
.modal > .body  { padding: 14px; overflow: auto; }
.row-btns { display: flex; gap: 8px; justify-content: flex-end; padding: 12px 14px; border-top: 1px solid var(--border); }

/* ---------- Code cards (floating actions, autohide) ---------- */
.code-card {
  position: relative;
  background: transparent;
  border-radius: 8px;
}
.code-card .lang-chip {
  position: absolute; top: 8px; left: 12px;
  padding: 2px 6px; font-size: 12px;
  background: #0f1a32; color: #c7d2fe;
  border: 1px solid var(--border);
  border-radius: 6px; pointer-events: none;
}
.code-card .floating-actions {
  position: absolute; top: 8px; right: 8px;
  display: flex; gap: 6px; flex-wrap: nowrap;
  opacity: 0; transform: translateY(-4px);
  transition: opacity 120ms ease, transform 120ms ease;
  pointer-events: none;   /* don't block text selection unless shown */
}
.code-card:hover .floating-actions,
.code-card:focus-within .floating-actions {
  opacity: 1; transform: translateY(0);
  pointer-events: auto;
}
.code-card pre {
  margin: 0; padding: 28px 12px 12px; /* space for chip/actions at top */
  background: #0b0f19; border: 1px solid var(--border); border-radius: 8px;
  overflow: auto;
}
.code-card .icon-btn.ghost { width: 28px; height: 28px; padding: 0; }

/* ---------- Themed scrollbars (Chromium/WebKit) ---------- */
.ai-scroll::-webkit-scrollbar,
.chat::-webkit-scrollbar,
.modal .body::-webkit-scrollbar,
.editor-console::-webkit-scrollbar,
.code-card pre::-webkit-scrollbar {
  width: 10px; height: 10px;
}
.ai-scroll::-webkit-scrollbar-track,
.chat::-webkit-scrollbar-track,
.modal .body::-webkit-scrollbar-track,
.editor-console::-webkit-scrollbar-track,
.code-card pre::-webkit-scrollbar-track {
  background: transparent;
}
.ai-scroll::-webkit-scrollbar-thumb,
.chat::-webkit-scrollbar-thumb,
.modal .body::-webkit-scrollbar-thumb,
.editor-console::-webkit-scrollbar-thumb,
.code-card pre::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, var(--border), rgba(255,255,255,0.04));
  border-radius: 10px; border: 2px solid transparent; background-clip: padding-box;
}
.ai-scroll::-webkit-scrollbar-thumb:hover,
.chat::-webkit-scrollbar-thumb:hover,
.modal .body::-webkit-scrollbar-thumb:hover,
.editor-console::-webkit-scrollbar-thumb:hover,
.code-card pre::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, var(--border), rgba(255,255,255,0.1));
}

/* ---------- Themed scrollbars (Firefox) ---------- */
.ai-scroll, .chat, .modal .body, .editor-console, .code-card pre {
  scrollbar-width: thin; scrollbar-color: var(--border) transparent;
}

/* ---------- Utilities ---------- */
.mono { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; }
.hidden { display: none !important; }

/* Tabs: disabled state for View when no preview */
.editor-tabs button.disabled {
  opacity: 0.45;
  pointer-events: none;
}

/* Simple code editor with line numbers */
.code-editor {
  height: 100%;
  display: grid;
  grid-template-columns: 48px 1fr; /* gutter | text */
  overflow: hidden;
  background: #0b0f19;
  border-top: 1px solid var(--border);
  border-bottom: 1px solid var(--border);
}
.code-gutter {
  background: #0b0f19;
  color: var(--sub);
  border-right: 1px solid var(--border);
  padding: 8px 6px;
  overflow: hidden;
  user-select: none;
}
.code-gutter pre {
  margin: 0;
  font-size: 12px;
  line-height: 1.5;
}
.code-text {
  width: 100%;
  height: 100%;
  border: 0;
  outline: none;
  resize: none;
  background: #0b0f19;
  color: var(--text);
  padding: 8px 10px;
  font-size: 12px;
  line-height: 1.5;
  tab-size: 2;
  caret-color: #7dd3fc;
}
/* ===== Uniform bar heights + full-height left pane (append-only) ===== */
:root {
  --bar-h: 44px;           /* one place to control all bars */
  --bar-px: 10px;          /* horizontal padding inside bars */
}

/* Left pane uses a 3-row grid: header | scroller | input (already set in App.tsx).
   These rules force consistent height regardless of content. */
.ai-pane > .header,
.ai-pane > .row,
.editor-header {
  min-height: var(--bar-h);
  height: var(--bar-h);          /* lock the visual height */
  padding: 0 var(--bar-px);      /* vertical size comes from height; we keep horiz padding */
  display: flex;
  align-items: center;
  gap: 10px;
}

/* Make sure the left middle row (the scroller) always fills the gap,
   so the input bar stays at the very bottom even when chat is empty. */
.ai-pane > .ai-scroll {
  min-height: 0;
  height: 100%;
  overflow-y: auto;
}

/* Because bars are now fixed-height, ensure chat content never hides under input */
.ai-pane .chat {
  padding-bottom: calc(var(--bar-h) + 12px);
}

/* ===== Consistent bars and full-height left pane ===== */
:root {
  --bar-h: 44px;        /* single source of truth for all top/bottom bars */
  --bar-px: 10px;
}

.ai-pane > .header,
.ai-pane > .row,
.editor-header {
  min-height: var(--bar-h);
  height: var(--bar-h);
  padding: 0 var(--bar-px);
  display: flex;
  align-items: center;
  gap: 10px;
}

/* Middle row always fills; input pinned at bottom regardless of content */
.ai-pane {
  display: grid;                /* header | scroller | input */
  grid-template-rows: auto 1fr auto;
}
.ai-pane > .ai-scroll {
  min-height: 0;
  height: 100%;
  overflow-y: auto;
  overscroll-behavior: contain;
}
.ai-pane .chat {
  border-radius: 0;
  padding: 8px 0 calc(var(--bar-h) + 12px);  /* keep last line clear of input bar */
}


/* === Kage 2.0: Editor pane scroll + theming (final) ===
   Pane owns scroll; unify CodeMirror backgrounds; themed scrollbars (Chromium + Firefox). */

/* Choose the editor background — inherit the pane color by default. */
:root {
  --editor-bg: var(--bg-c);
  --editor-scroll-thumb: var(--scroll-thumb, #3f3f46);
  --editor-scroll-track: var(--bg-c);
}

/* Make the pane the scroller */
.editor-view { 
  overflow: auto;
  background: var(--editor-bg);
  scrollbar-color: var(--editor-scroll-thumb) var(--editor-scroll-track); /* Firefox */
  scrollbar-width: thin;
}

/* WebKit scrollbars (Chromium) */
.editor-view::-webkit-scrollbar {
  width: 12px; height: 12px;
}
.editor-view::-webkit-scrollbar-track {
  background: var(--editor-scroll-track);
}
.editor-view::-webkit-scrollbar-thumb {
  background: var(--editor-scroll-thumb);
  border-radius: 8px;
  border: 2px solid var(--editor-scroll-track);
}

/* Unify CodeMirror internals with the pane */
.editor-view .cm-editor,
.editor-view .cm-scroller,
.editor-view .cm-content,
.editor-view .cm-gutters {
  background: var(--editor-bg) !important;
}

/* Ensure full width and natural height for CM when pane scrolls */
.editor-view .cm-editor,
.editor-view .cm-scroller,
.editor-view .cm-content {
  width: 100%;
  height: auto;
  min-height: 100%;
  position: static;
  inset: auto;
}

/* Safety: if any ancestor grid/flex blocks shrink, allow children to scroll */
.editor-pane, .editor-content, .pane-body, .tab-content { min-height: 0; }

* {
  scrollbar-width: thin;                 /* Firefox */
  scrollbar-color: #3a3a3a transparent;  /* Firefox */
}
*::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
*::-webkit-scrollbar-thumb {
  background: #3a3a3a;
  border-radius: 8px;
}
*::-webkit-scrollbar-track {
  background: transparent;
}